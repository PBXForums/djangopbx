# Generated by Django 4.0.4 on 2023-10-12 10:42

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0004_alter_defaultsetting_subcategory_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='RingGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Ring Group')),
                ('name', models.CharField(blank=True, help_text='Enter a name', max_length=64, null=True, verbose_name='Name')),
                ('extension', models.CharField(help_text='Enter the extension number for this ring group', max_length=32, verbose_name='Extension')),
                ('greeting', models.CharField(blank=True, help_text='Select the desired Greeting or leave blank', max_length=254, null=True, verbose_name='Greeting')),
                ('strategy', models.CharField(blank=True, choices=[('simultaneous', 'Simultaneous'), ('sequence', 'Sequnce'), ('enterprise', 'Enterprise'), ('rollover', 'Rollover'), ('random', 'Random')], default='simultaneous', help_text='Select the ring strategy', max_length=16, null=True, verbose_name='Strategy')),
                ('timeout_app', models.CharField(blank=True, choices=[('', ''), ('hangup', 'Hangup'), ('transfer', 'Transfer'), ('playback', 'Playback')], default='', help_text='Select the timeout destination type', max_length=32, null=True, verbose_name='Timeout App.')),
                ('timeout_data', models.CharField(blank=True, help_text='Select the timeout destination  for this ring group, if applicable', max_length=256, null=True, verbose_name='Timeout Data/Destination')),
                ('call_timeout', models.DecimalField(decimal_places=0, default=0, help_text='Timeout time in seconds', max_digits=3, verbose_name='Timeout')),
                ('caller_id_name', models.CharField(blank=True, help_text='Set the caller ID name for outbound external calls', max_length=32, null=True, verbose_name='Caller ID Name')),
                ('caller_id_number', models.CharField(blank=True, help_text='Set the caller ID number for outbound external calls', max_length=16, null=True, verbose_name='Caller ID Number')),
                ('cid_name_prefix', models.CharField(blank=True, help_text='Set a prefix on the caller ID name', max_length=32, null=True, verbose_name='CID Name Prefix')),
                ('cid_number_prefix', models.CharField(blank=True, help_text='Set a prefix on the caller ID number', max_length=16, null=True, verbose_name='CID Number Prefix')),
                ('distinctive_ring', models.CharField(blank=True, help_text='Select a sound for a distinctive ring', max_length=32, null=True, verbose_name='Distinctive Ring')),
                ('ring_group_ringback', models.CharField(blank=True, help_text='Defines what the caller will hear while the destination is being called', max_length=128, null=True, verbose_name='Ring Back')),
                ('follow_me_enabled', models.CharField(choices=[('false', 'False'), ('true', 'True')], default='false', help_text='Choose to follow a ring group destinations follow me', max_length=8, verbose_name='Follow Me Enabled')),
                ('missed_call_app', models.CharField(blank=True, choices=[('', 'Not Set'), ('email', 'Email')], default='', help_text='Select the missed call destination type', max_length=32, null=True, verbose_name='Missed Call')),
                ('missed_call_data', models.CharField(blank=True, help_text='Typically an email address or comma separated addresses', max_length=256, null=True, verbose_name='Missed Call Data')),
                ('forward_enabled', models.CharField(choices=[('false', 'False'), ('true', 'True')], default='false', help_text='Forward a called Ring Group to an alternate destination', max_length=8, verbose_name='Forward Enabled')),
                ('forward_destination', models.CharField(blank=True, help_text='Forward Destination', max_length=128, null=True, verbose_name='Forward Destination')),
                ('forward_toll_allow', models.CharField(blank=True, help_text='Ring group forwarding toll allow', max_length=32, null=True, verbose_name='Forward Toll Allow')),
                ('context', models.CharField(blank=True, db_index=True, help_text='Enter the context', max_length=128, null=True, verbose_name='Context')),
                ('enabled', models.CharField(choices=[('false', 'False'), ('true', 'True')], default='true', help_text='Set the status of this ring group', max_length=8, verbose_name='Enabled')),
                ('description', models.CharField(blank=True, max_length=64, null=True, verbose_name='Description')),
                ('dialplan_id', models.UUIDField(blank=True, null=True, verbose_name='Dialplan UUID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated')),
                ('synchronised', models.DateTimeField(blank=True, null=True, verbose_name='Synchronised')),
                ('updated_by', models.CharField(max_length=64, verbose_name='Updated by')),
                ('domain_id', models.ForeignKey(blank=True, db_column='domain_uuid', null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.domain', verbose_name='Domain')),
            ],
            options={
                'verbose_name_plural': 'Ring Groups',
                'db_table': 'pbx_ring_groups',
            },
        ),
        migrations.CreateModel(
            name='RingGroupUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Ring Group User')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated')),
                ('synchronised', models.DateTimeField(blank=True, null=True, verbose_name='Synchronised')),
                ('updated_by', models.CharField(max_length=64, verbose_name='Updated by')),
                ('ring_group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ringgroups.ringgroup', verbose_name='Ring Group')),
                ('user_uuid', models.ForeignKey(blank=True, db_column='user_uuid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenants.profile', to_field='user_uuid', verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Ring Group Users',
                'db_table': 'pbx_ring_group_users',
            },
        ),
        migrations.CreateModel(
            name='RingGroupDestination',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Ring Group Destination')),
                ('number', models.CharField(max_length=128, verbose_name='Number')),
                ('delay', models.DecimalField(decimal_places=0, default=0, max_digits=3, verbose_name='Delay')),
                ('timeout', models.DecimalField(decimal_places=0, default=30, max_digits=3, verbose_name='Timeout')),
                ('destination_prompt', models.DecimalField(choices=[(0, ''), (1, 'Confirm')], decimal_places=0, default=0, max_digits=3, verbose_name='Promp')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated')),
                ('synchronised', models.DateTimeField(blank=True, null=True, verbose_name='Synchronised')),
                ('updated_by', models.CharField(max_length=64, verbose_name='Updated by')),
                ('ring_group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ringgroups.ringgroup', verbose_name='Ring Group')),
            ],
            options={
                'verbose_name_plural': 'Ring Group Destinations',
                'db_table': 'pbx_ring_group_destinations',
            },
        ),
    ]
