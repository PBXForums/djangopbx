# Generated by Django 4.0.4 on 2023-11-16 18:40

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('tenants', '0004_alter_defaultsetting_subcategory_and_more'),
        ('conferencesettings', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConferenceCentres',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Conference Centre')),
                ('name', models.CharField(blank=True, help_text='Enter the Conference Centre Name.', max_length=64, null=True, verbose_name='Name')),
                ('extension', models.CharField(help_text='Enter the extension number for this Conference Centre', max_length=32, verbose_name='Extension')),
                ('greeting', models.CharField(blank=True, help_text='Greeting to be played before joining.', max_length=254, null=True, verbose_name='Greeting')),
                ('enabled', models.CharField(choices=[('false', 'False'), ('true', 'True')], default='true', max_length=8, verbose_name='Enabled')),
                ('description', models.CharField(blank=True, max_length=64, null=True, verbose_name='Description')),
                ('dialplan_id', models.UUIDField(blank=True, null=True, verbose_name='Dialplan UUID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated')),
                ('synchronised', models.DateTimeField(blank=True, null=True, verbose_name='Synchronised')),
                ('updated_by', models.CharField(max_length=64, verbose_name='Updated by')),
                ('domain_id', models.ForeignKey(blank=True, db_column='domain_uuid', null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.domain', verbose_name='Domain')),
            ],
            options={
                'verbose_name_plural': 'Conference Centres',
                'db_table': 'pbx_conference_centres',
            },
        ),
        migrations.CreateModel(
            name='ConferenceRooms',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Conference Rooms')),
                ('name', models.CharField(blank=True, help_text='Enter the Conference Room.', max_length=64, null=True, verbose_name='Name')),
                ('moderator_pin', models.CharField(default='10242', max_length=16, verbose_name='Moderator PIN')),
                ('participant_pin', models.CharField(default='88411', max_length=16, verbose_name='Participant PIN')),
                ('max_members', models.DecimalField(decimal_places=0, default=30, max_digits=3, verbose_name='Max Members')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Schedule from')),
                ('stop_time', models.DateTimeField(blank=True, null=True, verbose_name='to')),
                ('record', models.CharField(choices=[('false', 'False'), ('true', 'True')], default='true', max_length=8, verbose_name='Record')),
                ('wait_mod', models.CharField(choices=[('false', 'False'), ('true', 'True')], default='true', max_length=8, verbose_name='Wait for Moderator')),
                ('announce', models.CharField(choices=[('false', 'False'), ('true', 'True')], default='true', max_length=8, verbose_name='Announce')),
                ('sounds', models.CharField(choices=[('false', 'False'), ('true', 'True')], default='true', max_length=8, verbose_name='Sounds')),
                ('mute', models.CharField(choices=[('false', 'False'), ('true', 'True')], default='true', max_length=8, verbose_name='Mute')),
                ('enabled', models.CharField(choices=[('false', 'False'), ('true', 'True')], default='true', max_length=8, verbose_name='Enabled')),
                ('description', models.CharField(blank=True, max_length=64, null=True, verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated')),
                ('synchronised', models.DateTimeField(blank=True, null=True, verbose_name='Synchronised')),
                ('updated_by', models.CharField(max_length=64, verbose_name='Updated by')),
                ('c_centre_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conferencesettings.conferencecentres', verbose_name='Conference Centre')),
                ('c_profile_id', models.ForeignKey(help_text='This is a collection of settings', on_delete=django.db.models.deletion.CASCADE, to='conferencesettings.conferenceprofiles', verbose_name='Profile')),
            ],
            options={
                'verbose_name_plural': 'Conference Rooms',
                'db_table': 'pbx_conference_rooms',
                'unique_together': {('c_centre_id', 'participant_pin'), ('c_centre_id', 'moderator_pin')},
            },
        ),
        migrations.CreateModel(
            name='ConferenceRoomUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Conference Room User')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated')),
                ('synchronised', models.DateTimeField(blank=True, null=True, verbose_name='Synchronised')),
                ('updated_by', models.CharField(max_length=64, verbose_name='Updated by')),
                ('c_room_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conferencesettings.conferencerooms', verbose_name='Conference Room')),
                ('user_uuid', models.ForeignKey(blank=True, db_column='user_uuid', null=True, on_delete=django.db.models.deletion.SET_NULL, to='tenants.profile', to_field='user_uuid', verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Conference Room Users',
                'db_table': 'pbx_conference_room_users',
            },
        ),
    ]
