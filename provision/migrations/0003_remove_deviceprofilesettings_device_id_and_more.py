# Generated by Django 4.0.4 on 2023-04-29 18:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('provision', '0002_alter_devicekeys_options_alter_devicelines_options_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='deviceprofilesettings',
            name='device_id',
        ),
        migrations.AddField(
            model_name='deviceprofilesettings',
            name='profile_id',
            field=models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='provision.deviceprofiles', verbose_name='Profile'),
        ),
        migrations.AlterField(
            model_name='devicekeys',
            name='key_type',
            field=models.CharField(choices=[('42', 'yealink -> acd'), ('16', 'yealink -> blf'), ('39', 'yealink -> blf_list'), ('46', 'yealink -> broadsoft_group'), ('44', 'yealink -> broadsoft_phonebook'), ('10', 'yealink -> call_park'), ('9', 'yealink -> call_pickup'), ('1', 'yealink -> conference'), ('73', 'yealink -> custom'), ('29', 'yealink -> directory'), ('5', 'yealink -> dnd'), ('11', 'yealink -> dtmf'), ('2', 'yealink -> forward'), ('23', 'yealink -> group_pickup'), ('28', 'yealink -> history'), ('4', 'yealink -> hold'), ('34', 'yealink -> hot_desking'), ('14', 'yealink -> intercom'), ('50', 'yealink -> keypad_lock'), ('38', 'yealink -> ldap'), ('15', 'yealink -> line'), ('45', 'yealink -> local_group'), ('43', 'yealink -> local_phonebook'), ('30', 'yealink -> menu'), ('0', 'yealink -> na'), ('32', 'yealink -> new_sms'), ('24', 'yealink -> paging'), ('66', 'yealink -> paging_list'), ('40', 'yealink -> prefix'), ('20', 'yealink -> private'), ('25', 'yealink -> record'), ('19', 'yealink -> public_hold'), ('6', 'yealink -> redial'), ('21', 'yealink -> shared_line'), ('8', 'yealink -> sms'), ('13', 'yealink -> speed_dial'), ('33', 'yealink -> status'), ('49', 'yealink -> switch_account_down'), ('48', 'yealink -> switch_account_up'), ('3', 'yealink -> transfer'), ('17', 'yealink -> url'), ('35', 'yealink -> url_record'), ('12', 'yealink -> voicemail'), ('27', 'yealink -> xml_browser'), ('47', 'yealink -> xml_directory'), ('22', 'yealink -> xml_group'), ('41', 'yealink -> zero_sp_touch')], max_length=64, verbose_name='Key type'),
        ),
        migrations.AlterField(
            model_name='deviceprofilekeys',
            name='key_type',
            field=models.CharField(choices=[('42', 'yealink -> acd'), ('16', 'yealink -> blf'), ('39', 'yealink -> blf_list'), ('46', 'yealink -> broadsoft_group'), ('44', 'yealink -> broadsoft_phonebook'), ('10', 'yealink -> call_park'), ('9', 'yealink -> call_pickup'), ('1', 'yealink -> conference'), ('73', 'yealink -> custom'), ('29', 'yealink -> directory'), ('5', 'yealink -> dnd'), ('11', 'yealink -> dtmf'), ('2', 'yealink -> forward'), ('23', 'yealink -> group_pickup'), ('28', 'yealink -> history'), ('4', 'yealink -> hold'), ('34', 'yealink -> hot_desking'), ('14', 'yealink -> intercom'), ('50', 'yealink -> keypad_lock'), ('38', 'yealink -> ldap'), ('15', 'yealink -> line'), ('45', 'yealink -> local_group'), ('43', 'yealink -> local_phonebook'), ('30', 'yealink -> menu'), ('0', 'yealink -> na'), ('32', 'yealink -> new_sms'), ('24', 'yealink -> paging'), ('66', 'yealink -> paging_list'), ('40', 'yealink -> prefix'), ('20', 'yealink -> private'), ('25', 'yealink -> record'), ('19', 'yealink -> public_hold'), ('6', 'yealink -> redial'), ('21', 'yealink -> shared_line'), ('8', 'yealink -> sms'), ('13', 'yealink -> speed_dial'), ('33', 'yealink -> status'), ('49', 'yealink -> switch_account_down'), ('48', 'yealink -> switch_account_up'), ('3', 'yealink -> transfer'), ('17', 'yealink -> url'), ('35', 'yealink -> url_record'), ('12', 'yealink -> voicemail'), ('27', 'yealink -> xml_browser'), ('47', 'yealink -> xml_directory'), ('22', 'yealink -> xml_group'), ('41', 'yealink -> zero_sp_touch')], max_length=64, verbose_name='Key type'),
        ),
        migrations.AlterField(
            model_name='deviceprofilekeys',
            name='profile_id',
            field=models.ForeignKey(db_column='profile_id', on_delete=django.db.models.deletion.CASCADE, to='provision.deviceprofiles', verbose_name='Profile'),
        ),
    ]
